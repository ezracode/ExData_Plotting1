filter(cran, r_version == "3.0.2", country == "IN")
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "IN" | country == "US")
filter(cran, size >= 100500, r_os == "linux-gnu")
filter(cran, size > 100500, r_os == "linux-gnu")
?is.na
filter(cran, is.na(r_version))
is.na(c(3,5,NA,10))
is.na(cran
!is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(cran, r_version))
filter(cran, !is.na(cran))
filter(cran, !is.na(cran, r_version))
filter(cran, !is.na(cran))
!is.na(cran)
filter(cran, !is.na(r_version))
cran2 <- select (cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_versuib), ip_id)
arrange(cran2, country, desc(R.version), ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select (cran, ip_id, package, size)
select(cran3)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10, correct_size = size_gb-1000)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10, correct_size = size_gb-1000)
mutate(cran3, correct_size = size + 1000)
sumarize(cran, avg_bytes = mean(size))
summarize(cran, avg_bytes = mean(size))
load("C:\Users\esalazar\Downloads\getdata%2Fdata%2Fss06hid.csv")
load("C:\\Users\\esalazar\\Downloads\\getdata%2Fdata%2Fss06hid.csv")
?load
load("C:\\Users\\esalazar\\Downloads\\getdata%2Fdata%2Fss06hid.csv")
dat = load("C:\\Users\\esalazar\\Downloads\\getdata%2Fdata%2Fss06hid.csv", header=TRUE)
dat = load("C:\\Users\\esalazar\\Downloads\\getdata%2Fdata%2Fss06hid.csv")
dat = load("C:\\Users\\esalazar\\Downloads\\getdata%2Fdata%2Fss06hid.csv")
dat = load("C:/Users/esalazar/Downloads/getdata%2Fdata%2Fss06hid.csv")
dat = load("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
?load
?save
dat = url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
load(dat)
dat
data <- load(dat)
load(url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"))
library(data.table)
library(data)
install.packages("data.table")
library(data)
library(data.table)
data <- fread(dat)
data <- fread(url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"))
data <- fread("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
head(data)
select(data, val >= 1000000)
select(data, VAL >= 1000000)
select (data, val)
select (data, VAL)
select (data, VAL >= 1000000)
filter (data, VAL >= 1000000)
filter (data, VAL >= 100)
filter (data, VAL >= 10)
filter (data, VAL = 10)
filter (data, VAL == 10)
filter (data, VAL >= 24)
library(data.table)
misDatos <- fread("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
head(misDatos)
select()
?select
head(misDatos, 2)
head(misDatos)
?select
library(dplyr)
?select
select(misDatos, VAL)
select(misDatos, VAL, BUS)
?Filter
Filter(misDatos, VAL == 24)
Filter(misDatos, VAL == 24)
Filter(misDatos, VAL == 24)
Filter(misDatos, VAL == 2)
?Filters
Filters(misDatos, VAL == 2)
filters(misDatos, VAL == 2)
Filters(misDatos (VAL == 2))
Filters(misDatos (VAL == 2))
Filters(misDatos ("VAL" == 2))
Filters(misDatos ("VAL" == 2))
?head
filter(misDatos ("VAL" == 2))
filter(misDatos (VAL == 2))
head(misDatos)
?filter
filter(misDatos,  VAL == 2)
summarize(misDatos,  VAL == 2)
summarize(misDatos,  VAL)
summarize(misDatos,  n())
summarize(filter(misDatos, VAL == 2),  n())
summarize(filter(misDatos, VAL == 24),  n())
require (xlsx)
librry (xlsx)
librry (xlsx)
library (xlsx)
install.packages (xlsx)
install.packages(xlsx)
install.package(xlsx)
install.packages(xlsx)
install(xlsx)
install.packages("xlsx")
library ("xlsx")
datosx = read.xlsx("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx")
datosx = read.xlsx("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", 1)
?read.xlsx
datosx = read.xlsx("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", 0)
datosx = read.xlsx("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", sheetIndex = 1)
datosx = read.xlsx("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", sheetIndex = 0)
datosx = read.xlsx("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", sheetIndex = 1, startRow = 18, endRow = 23)
datosx = read.xlsx("C:/Users/esalazar/Downloads/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", sheetIndex = 1, startRow = 18, endRow = 23)
datosx = read.xlsx("C:/Users/esalazar/Downloads/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", sheetIndex = 1, startRow = 18, endRow = 23)
sum(datosx$Zip*datosx$Ext,na.rm=T)
library("XML")
install.packages("xml")
install.packages("XML")
library("XML")
result <- xmlParse(file = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml")
result <- xmlParse(file = "C:/Users/esalazar/Downloads/getdata%2Fdata%2Frestaurants.xml")
print(result)
getNodeSet(result, "/zipcode")
doc = xmlInternalTreeParse("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml")
result <- xmlInternalTreeParse("C:/Users/esalazar/Downloads/getdata%2Fdata%2Frestaurants.xml")
src = xpathApply(doc, xmlGetAttr, "href")
src = xpathApply(result, xmlGetAttr, "href")
result <- xmlParse(file = "C:/Users/esalazar/Downloads/getdata%2Fdata%2Frestaurants.xml")
top = xmlRoot(result)
xmlName(top)
names (top [[1]])
names (top [[1]])
names (top [[1]] [[zipcode]])
names (top [[1]] [["zipcode"]])
zipcodes = top [[1]] [["zipcode"]]
names (zipcodes)
name (zipcodes)
names (zipcodes)
xmlSApply(zipcodes[[1]], xmlValue)
xmlName(top)
names (top [[1]])
names (top [[1]])
names (top [[1]] [[1]])
zipcodes = top [[1]] [[1]] [["zipcode"]]
names(zipcodes)
names(zipcodes [[1]])
names(zipcodes [[1]] [[1]])
names(zipcodes [[1]])
zipcodes = top [[1]] [[1]]
names (zipcoees)
names (zipcodes)
names (zipcoees[[1]])
names (zipcodes[[1]])
print(zipcodes)
zipcodes = top [[1]]
print(zipcodes)
names (zipcodes[[1]])
zipcodes = top [[1]]
names (zipcodes)
names (zipcodes[[11]])
names (zipcodes[[1]])
names (zipcodes[[1]] [["zipcode"]])
names (zipcodes[[11]] [["zipcode"]])
zipcodes[[11]] [["zipcode"]]
zipcodes[[11]] [["zipcode"]]
zipcodes[[11]] [["zipcode"]]
zipcodes[[1]] [["zipcode"]]
xmlApply(zipcodes, xmlvalue)
xmlApply(zipcodes, xmlValue)
xmlValue(zipcodes[["zipcode"]])
xmlValue(zipcodes[[1]] [["zipcode"]])
xmlValue(zipcodes[[2]] [["zipcode"]])
xmlValue(zipcodes[[3]] [["zipcode"]])
xmlApply(zipcodes[[1]], xmlValue)
xmlApply(zipcodes, xmlValue)
xmlApply(zipcodes[["zipcode"]], xmlValue)
xmlApply(zipcodes, xmlValue)
?xmlApply
xmlApply(zipcodes, zipcode)
xmlApply(zipcodes, xmlAttrs)
xmlApply(zipcodes, xmlNode)
xmlApply(zipcodes, xmlValue == 1)
xmlApply(zipcodes, xmlValue)
xmlApply(zipcodes, xmlValue)
xmlSApply(art, function(x) xmlSApply(x, xmlValue))
xmlSApply(zipcodes, function(x) xmlSApply(x, xmlValue))
xmlSApply(zipcodes, function(x) xmlSApply(x, xmlValue))
xmlSApply(zipcodes, function(x) xmlSApply(x, xmlValue))
xmlSApply(zipcodes[[1]], function(x) xmlSApply(x, xmlValue))
xmlSApply(zipcodes[[2]], function(x) xmlSApply(x, xmlValue))
xmlSApply(zipcodes, function(x) xmlSApply(x, xmlValue))
xmlSApply(zipcodes[[200]], function(x) xmlSApply(x, xmlValue))
xmlSApply(zipcodes, function(x) xmlSApply(x, xmlValue))
xmlSApply(zipcodes, function(x) xmlSApply(x, xmlValue == 21231))
xmlSApply(zipcodes, function(x) xmlSApply(x, xmlValue == "21231"))
xmlSApply(zipcodes, function(x) xmlSApply(x, xmlValue[["zipcode"]]== 21231))
xmlSApply(zipcodes, function(x) xmlSApply(x, xmlValue[["zipcode"]]))
xmlSApply(zipcodes, function(x) xmlSApply(x[["zipcode"]], xmlValue))
xmlSApply(zipcodes, function(x) xmlSApply(x[["zipcode"]] == "21231", xmlValue))
xmlSApply(zipcodes, function(x) xmlSApply(x[["zipcode"]], xmlValue))
xmlSApply(zipcodes, function(x) xmlSApply(x[["zipcode"]], xmlValue))
xmlSApply(zipcodes, function(x) xmlSApply(x[["zipcode"]], xmlValue) == 21231)
xmlSApply(zipcodes, function(x) xmlSApply(x[["zipcode"]], xmlValue) == "21231")
datos <- xmlSApply(zipcodes, function(x) xmlSApply(x[["zipcode"]], xmlValue) == "21231")
print(datos)
filter (datos, row.text == TRUE)
datos <- xmlSApply(zipcodes, function(x) xmlSApply(x[["zipcode"]], xmlValue))
print(datos)
filter (datos, row.text == "21231")
filter (datos, "21231")
datos("21231")
print(datos)
datos('21231')
datos(c('21231'))
filter (datos, c("21231")
)}}
filter (datos, c("21231"))
datos
match (c("21231"), datos)
match (c("21231"), datos)
match (c("21231"), datos)
match (c("21231"), datos)
c("21231"), datos
c("21231")== datos
as.data.frame(table(datos))
?as.data.frame
valores = fread("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
mean(valores$pwgtp15,by=valores$SEX)
mean(valores$pwgtp15,by=valores$SEX)
rowMeans(valores)[valores$SEX==1]; rowMeans(valores)[valores$SEX==2]
clear
DT = fread("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
mean(DT$pwgtp15,by=DT$SEX)
tapply(DT$pwgtp15,DT$SEX,mean)
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
sapply(split(DT$pwgtp15,DT$SEX),mean)
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
DT[,mean(pwgtp15),by=SEX]
owMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(tapply(DT$pwgtp15,DT$SEX,mean)
)
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
swirl()
pwd
getwd()
?library
?nrow
?set.seed
?seq_len()
getwd()
head(consulta)
source("armarModelo.R")
rm(datosx)
rm(DT)
rm(datos)
rm(result)
rm(misDatos)
rm(valores)
rm
rm()
rm(top)
rm(zipcodes)
dir()
y <- "double quote: \", tab: \t, newline: \n, unicode point: \u20AC"
y
y <- "double quote: ", tab: \t, newline: \n, unicode point: \u20AC"
y <- "double quote: \\", tab: \t, newline: \n, unicode point: \u20AC"
y <- "double quote: \", tab: \t, newline: \n, unicode point: \u20AC"
y
paste("""", "hola", """")
paste("", "hola", "")
paste("\"", "hola", "\"")
gsub(" ", "", paste("\"", "hola", "\""))
substr("abcdef", 2, 4)
substr("abcdef", 1, 1)
nchar("hola")
t <. "hola"
t <- "hola"
nchar(t)
regexpr('.', "hola.quetal")
regexpr('.', "hola.quetal")
regexpr('a', "hola.quetal")
grep('a', "hola.quetal")
grep('a', "hola.quetal")
grep('.', "hola.quetal")
gregexpr(pattern ='2',"the2quickbrownfoxeswere2tired")
w<-gregexpr(pattern ='2',"the2quickbrownfoxeswere2tired")
w
View(w)
View(w)
w<-gregexpr(pa3ern ='3',"the3quickbrownfoxeswere2tired")
w<-gregexpr(pa3ern ='3',"the3quickbrownfoxeswere2tired")
w<-gregexpr(pattern ='3',"the3quickbrownfoxeswere2tired")
w
w[1]
instr('.', "hola.quetal")
grep("bcd", "abcd")
grep(".", "hola como estas. yo que")
regrep(".", "hola como estas. yo que")
regexpr(".", "hola como estas. yo que")
grep("A", "BACBAC", fixed=TRUE)
library(swirl)
swirl()
x
y <- x - 3
y
c(1.1, 9, 3.14)
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
swirl()
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
args(list.files)
old.dir <- getwd()
getwd()
dir.create("testdir")
dir()
setwd("testdir")
file.create("mytest.R")
dir()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
file.path("folder1", "folder2")
?dir.create
asdf
args(dir.create)
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
setwd(old.dir)
dir8
dir()
file.remove("testdir")
getwd()
dir()
getwd()
ls()
dir()
dir()
getwd()
setwd("C:/Users/esalazar/Documents")
setwd("C:/Users/esalazar/Documents")
dir()
dir()
dir()
getwd()
mayorque <- function(x){ }
mayorque <- function(x){ res <- x < 10
x[res] }
mayorque(1:20)
mayorque <- function(x){ res <- x < 10
print (rest)
x[res]}
mayorque(1:20)
mayorque <- function(x){ res <- x < 10
print(res)
x[res]}
mayorque(1:20)
gplot(1:20,  aes(x = factor(""), fill = workshop) ) +
geom_bar()
library(datasets)
data(iris)
getwd()
?iris
colnames(iris)
tapply(iris$Sepal.Length, iris$Species, mean)
apply(iris, 2, mean)
rowMeans(iris[, 1:4])
colMeans(iris)
apply(iris[, 1:4], 1, mean)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
apply(mtcars, 2, mean)
split(mtcars, mtcars$cyl)
sapply(mtcars, cyl, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
lapply(mtcars, mean)
mean(mtcars$mpg, mtcars$cyl)
tapply(mtcars$mpg, mtcars$cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
setwd("C:/Users/esalazar/Documents/Proyectos R/Programming R/ExData_Plotting1")
dir
dir()
source("plot2.R")
View(MyData2)
View(MyData2)
MyData2$datetime <- paste(MyData2$Date, MyData2$Time)
strptime("2/1/2007 00:00:00", "%m/%d/%y %H:%M:%S")
strptime("2/1/07 00:00:00", "%m/%d/%y %H:%M:%S")
strptime("2007/2/1 00:00:00", "%m/%d/%y %H:%M:%S")
strptime("07/2/1 00:00:00", "%m/%d/%y %H:%M:%S")
strptime("07/2/1 00:00:00", "%m/%d/%Y %H:%M:%S")
strptime("2/1/07 00:00:00", "%m/%d/%Y %H:%M:%S")
strptime("2/1/07 01:00:00", "%m/%d/%Y %H:%M:%S")
strptime("2/1/07 01:00:00", "%m/%d/%C %H:%M:%S")
strptime("2/1/2007 00:00:00", "%m/%d/%Y %H:%M:%S")
MyData2$datetime <- strptime(paste(MyData2$Date, MyData2$Time), "%m/%d/%Y %H:%M:%S")
source("plot2.R")
with (MyData2, plot(as.numeric(Global_active_power) ~ datetime))
source("plot2.R")
as.numeric(MyData2$datetime)
source("plot2.R")
source("plot2.R")
source("plot2.R")
source("plot2.R")
source("plot2.R")
as.Date(datetime, "%m/%d/%Y %H:%M:%S")
as.Date(MyData2$datetime, "%m/%d/%Y %H:%M:%S")
source("plot2.R")
source("plot2.R")
source("plot2.R")
plot(y = MyData2$Global_active_power, x = MyData2$datetime, type = "n")
points(y = MyData2$Global_active_power, x = MyData2$datetime, type = "l")
source("plot2.R")
source("plot2.R")
source("plot1.R")
source("plot1.R")
source("plot2.R")
source("plot2.R")
source("plot2.R")
source("plot2.R")
names(MyData2)
source("plot3.R")
source("plot3.R")
source("plot3.R")
source("plot3.R")
source("plot3.R")
View(MyData2)
View(MyData2)
source("plot3.R")
source("plot3.R")
source("plot3.R")
source("plot3.R")
source("plot3.R")
